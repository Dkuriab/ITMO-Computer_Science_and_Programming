import java.util.*;
import java.io.*;
import java.lang.*;
 
public class F { 

	public static int min(int a, int b) {
		return (a < b ? a : b);
	}


	public static void main(String[] args) {
		try{
			BufferedWriter out = new BufferedWriter(new OutputStreamWriter(System.out));
			Scanner scan = new Scanner(System.in);
			int k = scan.nextInt();
			int[] pricelist = new int[k + 1];
			int[][] dp = new int[k + 1][k + 2];

			for (int i = 1; i < k + 1; i++) {
				pricelist[i] = scan.nextInt();
			}

			for (int j = 0; j < k + 1; j++) {
				for (int i = 0; i < k + 1; i++) {
					dp [i][j] = 900000;
				}
			}
			for (int i = 0; i < k + 1; i++) {
				dp [i][k + 1] = 900000;
			}
			dp[0][0] = 0;

			for (int i = 1; i < k + 1; i++) {
				for (int j = 0; j < k + 1; j++) {
					if (pricelist[i] <= 100) {	
						dp[i][j] = min(dp[i - 1][j] + pricelist[i], dp[i - 1][j + 1]);
					} else if (j != 0) {
						dp[i][j] = min(dp[i - 1][j - 1] + pricelist[i], dp[i - 1][j + 1]);
					} else {
						dp[i][j] = dp[i - 1][j + 1];
					}
				}
			}

			int done = 900000;
			int final_j = 0;

			for (int j = 0; j < k + 1; j++) {
				if (dp[k][j] <= done) {
					done = dp[k][j];
					final_j = j;
				}
			}

			boolean[] used = new boolean[k + 1];
			int used_counter = 0;
			int i = k;
			int j = final_j;

			for (int r = 0 ; r < k; r++){
				if (pricelist[i] > 100) {
					if (j == 0) {
						used[i] = true;
						used_counter++;
						j++;
						i--;
					} else if (dp[i - 1][j - 1] + pricelist[i] < dp[i - 1][j + 1]) {
						i--;
						j--;
					} else {
						used[i] = true;
						used_counter++;
						i--;
						j++;
					}
				} else {
					if (dp[i - 1][j] + pricelist[i] < dp[i - 1][j + 1]) {
						i--;
					} else {
						used[i] = true;
						used_counter++;
						i--;
						j++;
					}
				}
			}

			out.write(done + "\n");
			out.write(final_j + " " + used_counter + "\n");
			for (int r = 0; r < k + 1; r++) {
				if (used[r]) {
					out.write(r + "\n");
				}
			}
			out.flush();


		}catch (IOException e) {
			System.out.println(e);
		}
	}
}

/*Около Петиного университета недавно открылось новое кафе, в котором действует следующая система скидок: 
при каждой покупке более чем на 100 рублей покупатель получает купон, дающий право на один бесплатный обед
(при покупке на сумму 100 рублей и меньше такой купон покупатель не получает).

Однажды Пете на глаза попался прейскурант на ближайшие n дней. Внимательно его изучив, он решил, 
что будет обедать в этом кафе все n дней, причем каждый день он будет покупать в кафе ровно один обед. 
Однако стипендия у Пети небольшая, и поэтому он хочет по максимуму использовать предоставляемую систему скидок так, 
чтобы его суммарные затраты были минимальны. Требуется найти минимально возможную суммарную стоимость обедов и номера дней, 
в которые Пете следует воспользоваться купонами.

Входные данные
В первой строке входного файла записано целое число n (0 ≤ n ≤ 100). В каждой из последующих n строк записано одно целое число, 
обозначающее стоимость обеда в рублях на соответствующий день. Стоимость — неотрицательное целое число, не превосходящее 300.

Выходные данные
В первой строке выдайте минимальную возможную суммарную стоимость обедов. Во второй строке 
выдайте два числа k1 и k2 — количество купонов, которые останутся неиспользованными у Пети после этих n дней и 
количество использованных им купонов соответственно.

В последующих k2 строках выдайте в возрастающем порядке номера дней, когда Пете следует воспользоваться купонами. 
Если существует несколько решений с минимальной суммарной стоимостью, то выдайте то из них, в котором значение 
k1 максимально (на случай, если Петя когда-нибудь ещё решит заглянуть в это кафе). Если таких решений несколько, выведите любое из них.*/